import { openai } from "aiclient";
import { ChalkInstance } from "chalk";
import { ArgDef, CommandMetadata, InteractiveIo, NamedArgs } from "interactive-app";
import { conversation, ItemIndexingStats, SourceTextBlock } from "knowledge-processor";
import { ChatUserInterface } from "typeagent";
import { ChatMemoryPrinter } from "./chatMemoryPrinter.js";
export declare function pause(ms: number): Promise<void>;
export declare function getMessages(cm: conversation.ConversationManager, maxTurns?: number | undefined): Promise<any[] | AsyncIterableIterator<SourceTextBlock<any, any>>>;
export declare function getMessagesAndCount(cm: conversation.ConversationManager, maxTurns?: number | undefined): Promise<[any[] | AsyncIterableIterator<SourceTextBlock>, number]>;
export declare function indexingStatsToCsv(stats: ItemIndexingStats | ItemIndexingStats[]): string;
export declare function completionStatsToCsv(stats: openai.CompletionUsageStats): string;
export declare function addFileNameSuffixToPath(sourcePath: string, suffix: string): string;
export declare function argSourceFile(defaultValue?: string | undefined): ArgDef;
export declare function argSourceFolder(defaultValue?: string | undefined): ArgDef;
export declare function argSourceFileOrFolder(defaultValue?: string | undefined): ArgDef;
export declare function argDestFile(defaultValue?: string | undefined): ArgDef;
export declare function argDestFolder(defaultValue?: string | undefined): ArgDef;
export declare function argConcurrency(value: number): ArgDef;
export declare function argMinScore(value: number): ArgDef;
export declare function argUniqueMessage(defaultValue?: boolean): ArgDef;
export declare function argClean(defaultValue?: boolean): ArgDef;
export declare function argPause(defaultValue?: number): ArgDef;
export declare function argChunkSize(defaultValue?: number | undefined): ArgDef;
export declare function keyValuesFromNamedArgs(args: NamedArgs, metadata?: CommandMetadata): Record<string, string>;
export declare function argToDate(value: string | undefined): Date | undefined;
export declare function parseFreeAndNamedArguments(args: string[], argDefs: CommandMetadata): [string[], NamedArgs];
export declare function createChatUx(io: InteractiveIo, inputColor?: ChalkInstance | undefined): ChatUserInterface;
export declare function getSearchQuestion(result: conversation.SearchTermsActionResponse | conversation.SearchTermsActionResponseV2): string | undefined;
export declare function manageConversationAlias(cm: conversation.ConversationManager, printer: ChatMemoryPrinter, name: string | undefined, alias: string | undefined): Promise<void>;
//# sourceMappingURL=common.d.ts.map